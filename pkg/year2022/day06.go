// Code generated by aocgen; DO NOT EDIT.
package year2022

type Day06 struct{}

func (p Day06) PartA(lines []string) any {
	var characters []string
	var count map[string]int
	var goon bool
	for i, char := range lines[0] {
		if len(characters)<4{
			characters = append(characters, string(char))
		}else{
			characters = append(characters[1:4], string(char))
			count = make(map[string]int,0)
			goon = false
			for _, character := range characters {
				count[character]++
				if count[character]>1{
					goon = true
				}
			}
			if goon { continue }
			return i+1
		}
	}
	return 0
}

func (p Day06) PartB(lines []string) any {
	var characters []string
	var count map[string]int
	var goon bool
	for i, char := range lines[0] {
		if len(characters)<14{
			characters = append(characters, string(char))
		}else{
			characters = append(characters[1:14], string(char))
			count = make(map[string]int,0)
			goon = false
			for _, character := range characters {
				count[character]++
				if count[character]>1{
					goon = true
				}
			}
			if goon { 
				continue
			}
			return i+1
		}
	}
	return 0
}
